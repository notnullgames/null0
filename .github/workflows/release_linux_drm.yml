name: Release Linux DRM (ARM)

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build-linux-drm:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: arm64
            platform: linux/arm64
            image: arm64v8/ubuntu:24.04
            artifact: null0_linux_drm_arm64.zip
          - arch: armhf
            platform: linux/arm/v7
            image: arm32v7/ubuntu:24.04
            artifact: null0_linux_drm_armhf.zip
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64,linux/arm

      - name: Build DRM in ARM container (${{ matrix.arch }})
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ matrix.image }}
          options: |
            --platform=${{ matrix.platform }}
            -v ${{ github.workspace }}:/work
            -w /work
          run: |
            set -e
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            apt-get install -y --no-install-recommends \
              ca-certificates curl git pkg-config cmake ninja-build build-essential zip \
              libdrm-dev libgbm-dev libegl1-mesa-dev libgles2-mesa-dev \
              libasound2-dev libudev-dev libinput-dev libxkbcommon-dev
            update-ca-certificates || true
            cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release \
              -DPLATFORM=DRM -DGRAPHICS=GRAPHICS_API_OPENGL_ES2 \
              -DWAMR_BUILD_SIMD=0 -DWAMR_BUILD_INVOKE_NATIVE_GENERAL=1
            cmake --build build --target host
            cd build/host
            zip ../../${{ matrix.artifact }} null0

      - name: Upload asset to release
        run: gh release upload ${{ github.event.release.tag_name }} ${{ matrix.artifact }}
        env:
          GH_TOKEN: ${{ github.token }}
